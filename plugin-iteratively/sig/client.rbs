class Itly
  class Plugin
    class Iteratively
      class Client
        attr_reader api_key: ::String
        attr_reader url: ::String
        attr_reader logger: ::Logger?
        attr_reader buffer_size: ::Integer
        attr_reader max_retries: ::Integer
        attr_reader retry_delay_min: ::Float
        attr_reader retry_delay_max: ::Float

        def track: (type: ::String `type`, event: ::Itly::Event? event, properties: propertiesHash? properties, validation: ::Itly::ValidationResponse? validation) -> void
        def flush: () -> void
        def shutdown: (?force: bool force) -> void

        private

        def initialize: (url: ::String url, api_key: ::String api_key, logger: ::Logger? logger, buffer_size: ::Integer buffer_size, max_retries: ::Integer max_retries, retry_delay_min: ::Float retry_delay_min, retry_delay_max: ::Float retry_delay_max, omit_values: bool omit_values) -> void
        def buffer_full?: () -> bool
        def post_models: (::Array[::Itly::Plugin::Iteratively::TrackModel] model) -> bool
        def runner_complete?: () -> bool
        def delay_before_next_try: (::Integer nbr_tries) -> ::Float
      end
    end
  end
end
